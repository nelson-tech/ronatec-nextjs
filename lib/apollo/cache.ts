import { InMemoryCache } from "@apollo/client"
import { concatPagination } from "@apollo/client/utilities"
// generated by Fragment Matcher plugin
import introspectionResult from "../api/gql/fragment-matcher"

import { initialMenu } from "@lib/hooks/useMainMenu"
import { AlertState, NormalizedMenuItem } from "@lib/types"

export const cache: InMemoryCache = new InMemoryCache({
  possibleTypes: introspectionResult.possibleTypes,
  typePolicies: {
    Query: {
      fields: {
        allPosts: concatPagination(),
        loggedIn: {
          read() {
            return loggedInVar()
          },
        },
        mainMenu: {
          read() {
            return menuVar()
          },
        },
        alert: {
          read() {
            return alertVar()
          },
        },
      },
    },
  },
})

export const loggedInVar = cache.makeVar<boolean>(false)

export const menuVar = cache.makeVar<NormalizedMenuItem[]>(initialMenu)

export const alertVar = cache.makeVar<AlertState>({
  open: false,
  primary: "",
  secondary: "",
  type: "success",
  timeout: 1500,
})
